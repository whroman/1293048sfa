(function(){angular.module("Util",[]).factory("Util",function($rootScope,$window){var Util;return Util={},Util.mediaQuery={},Util.mediaQuery.$el=angular.element(document.getElementById("media-query")),Util.mediaQuery.get=function(){return this.$el.css("z-index")},Util.typeIsArray=Array.isArray||function(value){return"[object Array]"==={}.toString.call(value)},Util})}).call(this);
(function(){angular.module("App:List",["Controller:TasksList","Util","focusWhen","ngMaterial","chart.js"])}).call(this);
(function(){angular.module("Collection:Form",["Model:Input"]).factory("CollectionForm",function(ModelInput){var Form;return Form=function(){function Form(){this.all={}}return Form.prototype.set=function(name,initVal){return this.all[name]=new ModelInput(name,initVal),this},Form}()})}).call(this);
(function(){angular.module("Collection:Tasks",["Util","Model:Task"]).factory("CollectionTasks",function(Util,ModelTask){var CollectionTasks;return CollectionTasks=function(){function CollectionTasks(){this.all=[],this.order={},this.order.keys=[{Name:"NAME",Code:"CODE",Description:"DESC","Completion Date":"CD"}],this.order.by="CD",this.order.reverse=!1,this.order.set=function(fieldName){return this.reverse=fieldName===this.by?!this.reverse:!1,this.by=fieldName}}return CollectionTasks.prototype.get=function(uid){return this.all[uid]},CollectionTasks.prototype.set=function(task){var i,len,tasksArray;if(Util.typeIsArray(task))for(tasksArray=task,i=0,len=tasksArray.length;len>i;i++)task=tasksArray[i],this.set(task);else this.all.push(new ModelTask(task));return this},CollectionTasks.prototype.contains=function(uid){return void 0!==this.all[uid]},CollectionTasks}()})}).call(this);
(function(){angular.module("Controller:TasksList",["Collection:Tasks"]).controller("Controller:TasksList",function($scope,$window,$http,CollectionTasks){return $scope.tasks=new CollectionTasks,$scope.tasks.set($window.tasks)})}).call(this);
(function(){angular.module("focusWhen",[]).directive("focusWhen",function($timeout,$parse){return{link:function(scope,element,attrs){var model;return model=$parse(attrs.focusWhen),scope.$watch(model,function(value){return value===!0?$timeout(function(){return element[0].focus()}):void 0}),element.bind("blur",function(){return scope.$apply(model.assign(scope,!1))})}}})}).call(this);
(function(){angular.module("Model:Input",[]).factory("ModelInput",function(){var Input;return Input=function(){function Input(name,initialValue){this.val=initialValue,this.input=initialValue,this.hasChanged=!1,this.focused=!1}return Input.prototype.reset=function($event){return console.log("reset"),this.input=this.val,this.onChange(),$event?$event.stopPropagation():void 0},Input.prototype.save=function($event){return console.log("save"),this.val=this.input,this.onChange(),$event?$event.stopPropagation():void 0},Input.prototype.onFocus=function(){return this.hasChanged?void 0:this.reset()},Input.prototype.onClick=function($event){return this.focused=!0,$event?$event.stopPropagation():void 0},Input.prototype.onChange=function(){return this.hasChanged=this.val!==this.input},Input.prototype.onKeypress=function($event){return 27===$event.keyCode&&this.reset($event),13===$event.keyCode?this.save($event):void 0},Input}()})}).call(this);
(function(){angular.module("Model:Task",["Collection:Form"]).factory("ModelTask",function(CollectionForm){var Task;return Task=function(){function Task(task){var generateRandomIncreasingInts;this.NAME=task.NAME,this.CODE=task.CODE,this.DESC=task.DESC,this.ID=task.ID,this.CATEGORY=task.CATEGORY,this.CD=parseInt(task.CD),this.isSelected=!1,this.display={},this.display.CD=moment(this.CD,"x").format("YYYY-M-D"),this.onClick=function($event){return $event.keyCode?void 0:this.isSelected=!this.isSelected},this.form=new CollectionForm,this.form.set("desc",this.DESC).set("cd",this.display.CD),generateRandomIncreasingInts=function(num,start,mult){var i,ints,j,ref;for(ints=[],i=j=1,ref=num;ref>=j;i=j+=1)start+=Math.floor(Math.random()*mult),ints.push(start);return ints},this.chart={},this.chart.labels=["January","February","March","April","May","June","July"],this.chart.series=["Outstanding Category Tasks","Completed Category Tasks"],this.chart.data=[generateRandomIncreasingInts(this.chart.labels.length,100,-20),generateRandomIncreasingInts(this.chart.labels.length,10,30)]}return Task}()})}).call(this);
//# sourceMappingURL=maps/app.js.map