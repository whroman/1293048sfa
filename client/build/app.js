(function(){angular.module("Util",[]).factory("Util",function($rootScope,$window){var Util;return Util={},Util.mediaQuery={},Util.mediaQuery.$el=angular.element(document.getElementById("media-query")),Util.mediaQuery.get=function(){return this.$el.css("z-index")},Util.typeIsArray=Array.isArray||function(value){return"[object Array]"==={}.toString.call(value)},Util})}).call(this);
(function(){angular.module("Collection:Tasks",["Util"]).factory("CollectionTasks",function($rootScope,Util){var CollectionTasks,Form,Input,Task;return Input=function(){function Input(name,initialValue){this.val=initialValue,this.input=initialValue,this.hasChanged=!1,this.focused=!1}return Input.prototype.reset=function($event){return console.log("reset"),this.input=this.val,this.onChange(),$event?$event.stopPropagation():void 0},Input.prototype.save=function($event){return console.log("save"),this.val=this.input,this.onChange(),$event?$event.stopPropagation():void 0},Input.prototype.onFocus=function(){return this.hasChanged?void 0:this.reset()},Input.prototype.onClick=function($event){return this.focused=!0,$event?$event.stopPropagation():void 0},Input.prototype.onChange=function(){return this.hasChanged=this.val!==this.input},Input.prototype.onKeypress=function($event){return 27===$event.keyCode&&this.reset($event),13===$event.keyCode?this.save($event):void 0},Input}(),Form=function(){function Form(){this.all={}}return Form.prototype.set=function(name,initVal){return this.all[name]=new Input(name,initVal),this},Form}(),Task=function(){function Task(task){this.NAME=task.NAME,this.CODE=task.CODE,this.DESC=task.DESC,this.ID=task.ID,this.CATEGORY=task.CATEGORY,this.CD=parseInt(task.CD),this.isSelected=!1,this.display={},this.display.CD=moment(this.CD,"x").format("YYYY-M-D"),this.onClick=function($event){return $event.keyCode?void 0:this.isSelected=!this.isSelected},this.form=new Form,this.form.set("desc",this.DESC).set("cd",this.display.CD)}return Task}(),CollectionTasks=function(){function CollectionTasks(){this.all=[],this.order={},this.order.keys=[{Name:"NAME",Code:"CODE",Description:"DESC","Completion Date":"CD"}],this.order.by="CD",this.order.reverse=!1,this.order.set=function(fieldName){return this.reverse=fieldName===this.by?!this.reverse:!1,this.by=fieldName}}return CollectionTasks.prototype.get=function(uid){return this.all[uid]},CollectionTasks.prototype.set=function(task){var i,len,tasksArray;if(Util.typeIsArray(task))for(tasksArray=task,i=0,len=tasksArray.length;len>i;i++)task=tasksArray[i],this.set(task);else this.all.push(new Task(task));return this},CollectionTasks.prototype.contains=function(uid){return void 0!==this.all[uid]},CollectionTasks}()})}).call(this);
(function(){angular.module("App:List",["Controller:TasksList","Util","focusWhen","ngMaterial"])}).call(this);
(function(){angular.module("Controller:TasksList",["Collection:Tasks","Util"]).controller("Controller:TasksList",function($scope,$window,$http,CollectionTasks,Util){return $scope.util=Util,$scope.tasks=new CollectionTasks,$scope.tasks.set($window.tasks),$scope.foo={bar:!0},$scope.$on("task:detail",function(event,productId){}),$window.logScope=function(){return $window.$scope=$scope}})}).call(this);
(function(){angular.module("focusWhen",[]).directive("focusWhen",function($timeout,$parse){return{link:function(scope,element,attrs){var model;return model=$parse(attrs.focusWhen),scope.$watch(model,function(value){return value===!0?$timeout(function(){return element[0].focus()}):void 0}),element.bind("blur",function(){return scope.$apply(model.assign(scope,!1))})}}})}).call(this);
//# sourceMappingURL=maps/app.js.map